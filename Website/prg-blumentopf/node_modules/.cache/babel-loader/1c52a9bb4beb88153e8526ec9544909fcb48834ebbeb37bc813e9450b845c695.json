{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, createElementVNode as _createElementVNode, withCtx as _withCtx, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_SettingsComponent = _resolveComponent(\"SettingsComponent\");\n  const _component_HeaderComponent = _resolveComponent(\"HeaderComponent\");\n  const _component_SliderComponent = _resolveComponent(\"SliderComponent\");\n  const _component_CardComponent = _resolveComponent(\"CardComponent\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [$data.showSettings ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_SettingsComponent, {\n    onCloseSettings: $options.toggleSettings\n  }, null, 8, [\"onCloseSettings\"])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_HeaderComponent, {\n    onOpenSettings: $options.toggleSettings,\n    title: \"Basilikum\",\n    type: \"pageHeader\"\n  }, null, 8, [\"onOpenSettings\"]), _createVNode(_component_CardComponent, null, {\n    default: _withCtx(() => [_createVNode(_component_HeaderComponent, {\n      title: \"Aktuelle Werte:\",\n      type: \"cardHeader\"\n    }), _createElementVNode(\"ul\", null, [(_openBlock(), _createElementBlock(_Fragment, null, _renderList([], sensor => {\n      return _createElementVNode(\"li\", {\n        key: sensor.id\n      }, [_createVNode(_component_SliderComponent, {\n        title: sensor.title,\n        value: sensor.value\n      }, null, 8, [\"title\", \"value\"])]);\n    }), 64))])]),\n    _: 1\n  }), _createVNode(_component_CardComponent, null, {\n    default: _withCtx(() => [_createVNode(_component_HeaderComponent, {\n      title: \"Statistik:\",\n      type: \"cardHeader\"\n    })]),\n    _: 1\n  })])), _createElementVNode(\"div\", null, [_createElementVNode(\"p\", null, \"jsonData: \" + _toDisplayString($data.jsonData), 1)])], 64);\n}","map":{"version":3,"names":["$data","showSettings","_createElementBlock","_hoisted_1","_createVNode","_component_SettingsComponent","onCloseSettings","$options","toggleSettings","_hoisted_2","_component_HeaderComponent","onOpenSettings","title","type","_component_CardComponent","_createElementVNode","_Fragment","_renderList","sensor","key","id","_component_SliderComponent","value","_toDisplayString","jsonData"],"sources":["C:\\Users\\Dave\\prg-blumentopf\\src\\App.vue"],"sourcesContent":["<template>\n  <div v-if=\"showSettings\">\n    <SettingsComponent @closeSettings=\"toggleSettings\"></SettingsComponent>\n  </div>\n\n  <div v-else>\n    <HeaderComponent @openSettings=\"toggleSettings\" title=\"Basilikum\" type=\"pageHeader\" />\n\n    <CardComponent>\n      <HeaderComponent title=\"Aktuelle Werte:\" type=\"cardHeader\" />\n      <ul>\n        <li v-for=\"sensor in []\" :key=\"sensor.id\">\n          <SliderComponent :title=\"sensor.title\" :value=\"sensor.value\"></SliderComponent>\n        </li>\n      </ul>\n    </CardComponent>\n\n    <CardComponent>\n      <HeaderComponent title=\"Statistik:\" type=\"cardHeader\" />\n      <!-- <TabulatorComponent :tabs=\"[]\"></TabulatorComponent> -->\n    </CardComponent>\n  </div>\n  <div>\n    <p>jsonData: {{ jsonData }}</p>\n  </div>\n</template>\n\n<script>\n\nimport HeaderComponent from './components/HeaderComponent.vue'\nimport CardComponent from './components/CardComponent.vue'\nimport SliderComponent from './components/SliderComponent.vue'\n// import TabulatorComponent from './components/TabulatorComponent.vue'\nimport SettingsComponent from './components/SettingsComponent.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    HeaderComponent,\n    CardComponent,\n    SliderComponent,\n    // TabulatorComponent,\n    SettingsComponent\n},\n  data() {\n    return {\n      showSettings: false,\n      url: \"https://cloudleo.duckdns.org/Blumentopf/Database/testBasilikum.json\",\n      jsonData: null\n    }\n  },\n  methods: {\n    toggleSettings() {\n      this.showSettings = !this.showSettings\n    }\n  },\n  mounted() {\n    fetch(this.url)\n      .then(res => res.json())\n      .then(data => this.jsonData = data)\n      .catch(err => console.log(err.message))\n  }\n}\n</script>\n\n<style>\n#app {\n  --lightGrey: #cccccc;\n  --defaultGrey: #888888;\n  --darkGrey: #444444;\n  --black: #000000;\n  --white: #ffffff;\n  --primary: #7da0d1;\n  --secondary: #d1ae7d;\n  --statGood: #50d025;\n  --statOkay: #f0ed11;\n  --statAlert: #f57913;\n  --statWarning: #d82816;\n\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: var(--black);\n}\n\nul {\n  margin: 0;\n  padding: 0;\n}\n\nli {\n  list-style-type: none;\n}\n</style>\n"],"mappings":";;;;;;;;;;;;6DACaA,KAAA,CAAAC,YAAY,I,cAAvBC,mBAAA,CAEM,OAAAC,UAAA,GADJC,YAAA,CAAuEC,4BAAA;IAAnDC,eAAa,EAAEC,QAAA,CAAAC;EAAc,iC,oBAGnDN,mBAAA,CAgBM,OAAAO,UAAA,GAfJL,YAAA,CAAsFM,0BAAA;IAApEC,cAAY,EAAEJ,QAAA,CAAAC,cAAc;IAAEI,KAAK,EAAC,WAAW;IAACC,IAAI,EAAC;mCAEvET,YAAA,CAOgBU,wBAAA;sBANd,MAA6D,CAA7DV,YAAA,CAA6DM,0BAAA;MAA5CE,KAAK,EAAC,iBAAiB;MAACC,IAAI,EAAC;QAC9CE,mBAAA,CAIK,c,cAHHb,mBAAA,CAEKc,SAAA,QAAAC,WAAA,CAFgB,EAAE,EAAZC,MAAM;aAAjBH,mBAAA,CAEK;QAFqBI,GAAG,EAAED,MAAM,CAACE;UACpChB,YAAA,CAA+EiB,0BAAA;QAA7DT,KAAK,EAAEM,MAAM,CAACN,KAAK;QAAGU,KAAK,EAAEJ,MAAM,CAACI;;;;MAK5DlB,YAAA,CAGgBU,wBAAA;sBAFd,MAAwD,CAAxDV,YAAA,CAAwDM,0BAAA;MAAvCE,KAAK,EAAC,YAAY;MAACC,IAAI,EAAC;;;SAI7CE,mBAAA,CAEM,cADJA,mBAAA,CAA+B,WAA5B,YAAU,GAAAQ,gBAAA,CAAGvB,KAAA,CAAAwB,QAAQ,M"},"metadata":{},"sourceType":"module","externalDependencies":[]}