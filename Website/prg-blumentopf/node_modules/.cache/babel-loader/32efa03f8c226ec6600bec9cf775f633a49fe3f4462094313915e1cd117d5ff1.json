{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, withCtx as _withCtx } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_SettingsComponent = _resolveComponent(\"SettingsComponent\");\n  const _component_HeaderComponent = _resolveComponent(\"HeaderComponent\");\n  const _component_SliderComponent = _resolveComponent(\"SliderComponent\");\n  const _component_CardComponent = _resolveComponent(\"CardComponent\");\n  const _component_TabulatorComponent = _resolveComponent(\"TabulatorComponent\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [$data.showSettings ? (_openBlock(), _createBlock(_component_SettingsComponent, {\n    key: 0\n  })) : _createCommentVNode(\"v-if\", true), _createVNode(_component_HeaderComponent, {\n    onShowSettings: $options.toggleSettings,\n    title: \"Basilikum\",\n    type: \"pageHeader\"\n  }, null, 8 /* PROPS */, [\"onShowSettings\"]), _createVNode(_component_CardComponent, null, {\n    default: _withCtx(() => [_createVNode(_component_HeaderComponent, {\n      title: \"Aktuelle Werte:\",\n      type: \"cardHeader\"\n    }), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.sensorData, sensor => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        key: sensor.id\n      }, [_createVNode(_component_SliderComponent, {\n        title: sensor.title,\n        value: sensor.value\n      }, null, 8 /* PROPS */, [\"title\", \"value\"])]);\n    }), 128 /* KEYED_FRAGMENT */))])]),\n\n    _: 1 /* STABLE */\n  }), _createVNode(_component_CardComponent, null, {\n    default: _withCtx(() => [_createVNode(_component_HeaderComponent, {\n      title: \"Statistik:\",\n      type: \"cardHeader\"\n    }), _createVNode(_component_TabulatorComponent, {\n      tabs: $data.sensorData\n    }, null, 8 /* PROPS */, [\"tabs\"])]),\n    _: 1 /* STABLE */\n  })], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["$data","showSettings","_createBlock","_component_SettingsComponent","key","_createVNode","_component_HeaderComponent","onShowSettings","$options","toggleSettings","title","type","_component_CardComponent","_createElementVNode","_createElementBlock","_Fragment","_renderList","sensorData","sensor","id","_component_SliderComponent","value","_component_TabulatorComponent","tabs"],"sources":["C:\\Users\\Dave\\prg-blumentopf\\src\\App.vue"],"sourcesContent":["<template>\n  <SettingsComponent v-if=\"showSettings\"></SettingsComponent>\n\n  <HeaderComponent @showSettings=\"toggleSettings\" title=\"Basilikum\" type=\"pageHeader\" />\n\n  <CardComponent>\n    <HeaderComponent title=\"Aktuelle Werte:\" type=\"cardHeader\" />\n    <ul>\n      <li v-for=\"sensor in sensorData\" :key=\"sensor.id\">\n        <SliderComponent :title=\"sensor.title\" :value=\"sensor.value\"></SliderComponent>\n      </li>\n    </ul>\n  </CardComponent>\n\n  <CardComponent>\n    <HeaderComponent title=\"Statistik:\" type=\"cardHeader\" />\n    <TabulatorComponent :tabs=\"sensorData\"></TabulatorComponent>\n  </CardComponent>\n</template>\n\n<script>\nimport HeaderComponent from './components/HeaderComponent.vue'\nimport CardComponent from './components/CardComponent.vue'\nimport SliderComponent from './components/SliderComponent.vue'\nimport TabulatorComponent from './components/TabulatorComponent.vue'\nimport SettingsComponent from './components/SettingsComponent.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    HeaderComponent,\n    CardComponent,\n    SliderComponent,\n    TabulatorComponent,\n    SettingsComponent\n},\n  data() {\n    return {\n      sensorData: [\n        {title: 'Temperatur', value: '21Â°', log: [32, 27, 18, 19, 22]},\n        {title: 'Feuchtigkeit', value: '58%', log: [62, 60, 55, 65, 59]},\n        {title: 'Licht', value: '400cd', log: [720, 654, 370, 550, 380]}\n      ],\n      showSettings: false\n    }\n  },\n  methods: {\n    toggleSettings() {\n      this.showSettings = !this.showSettings\n    }\n  }\n}\n</script>\n\n<style>\n#app {\n  --lightGrey: #cccccc;\n  --defaultGrey: #888888;\n  --darkGrey: #444444;\n  --black: #000000;\n  --white: #ffffff;\n  --primary: #7da0d1;\n  --secondary: #d1ae7d;\n  --statGood: #50d025;\n  --statOkay: #f0ed11;\n  --statAlert: #f57913;\n  --statWarning: #d82816;\n\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: var(--black);\n\n  margin: 10px;\n}\n\nbody, ul {\n  margin: 0;\n  padding: 0;\n}\n\nli {\n  list-style-type: none;\n}\n</style>\n"],"mappings":";;;;;;;6DAC2BA,KAAA,CAAAC,YAAY,I,cAArCC,YAAA,CAA2DC,4BAAA;IAAAC,GAAA;EAAA,M,mCAE3DC,YAAA,CAAsFC,0BAAA;IAApEC,cAAY,EAAEC,QAAA,CAAAC,cAAc;IAAEC,KAAK,EAAC,WAAW;IAACC,IAAI,EAAC;+CAEvEN,YAAA,CAOgBO,wBAAA;sBANd,MAA6D,CAA7DP,YAAA,CAA6DC,0BAAA;MAA5CI,KAAK,EAAC,iBAAiB;MAACC,IAAI,EAAC;QAC9CE,mBAAA,CAIK,c,kBAHHC,mBAAA,CAEKC,SAAA,QAAAC,WAAA,CAFgBhB,KAAA,CAAAiB,UAAU,EAApBC,MAAM;2BAAjBJ,mBAAA,CAEK;QAF6BV,GAAG,EAAEc,MAAM,CAACC;UAC5Cd,YAAA,CAA+Ee,0BAAA;QAA7DV,KAAK,EAAEQ,MAAM,CAACR,KAAK;QAAGW,KAAK,EAAEH,MAAM,CAACG;;;;;MAK5DhB,YAAA,CAGgBO,wBAAA;sBAFd,MAAwD,CAAxDP,YAAA,CAAwDC,0BAAA;MAAvCI,KAAK,EAAC,YAAY;MAACC,IAAI,EAAC;QACzCN,YAAA,CAA4DiB,6BAAA;MAAvCC,IAAI,EAAEvB,KAAA,CAAAiB;IAAU,kC"},"metadata":{},"sourceType":"module","externalDependencies":[]}