{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, createElementVNode as _createElementVNode, withCtx as _withCtx } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_SettingsComponent = _resolveComponent(\"SettingsComponent\");\n  const _component_HeaderComponent = _resolveComponent(\"HeaderComponent\");\n  const _component_SliderComponent = _resolveComponent(\"SliderComponent\");\n  const _component_CardComponent = _resolveComponent(\"CardComponent\");\n  const _component_TabulatorComponent = _resolveComponent(\"TabulatorComponent\");\n  return $data.showSettings ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_SettingsComponent, {\n    onCloseSettings: $options.toggleSettings,\n    onUpdatePlant: $options.updatePlant,\n    plant: $data.selectedPlant\n  }, null, 8, [\"onCloseSettings\", \"onUpdatePlant\", \"plant\"])])) : $data.potData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_HeaderComponent, {\n    onOpenSettings: $options.toggleSettings,\n    title: $data.profile ? $data.profile.name : '',\n    type: \"pageHeader\"\n  }, null, 8, [\"onOpenSettings\", \"title\"]), _createVNode(_component_CardComponent, null, {\n    default: _withCtx(() => [_createVNode(_component_HeaderComponent, {\n      title: \"Aktuelle Werte:\",\n      type: \"cardHeader\"\n    }), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.potData.sensors, (sensor, index) => {\n      return _openBlock(), _createElementBlock(\"li\", null, [_createVNode(_component_SliderComponent, {\n        title: sensor.name,\n        value: sensor.log[sensor.log.length - 1],\n        unit: sensor.unit,\n        boundaries: index\n      }, null, 8, [\"title\", \"value\", \"unit\", \"boundaries\"])]);\n    }), 256))])]),\n    _: 1\n  }), _createVNode(_component_CardComponent, null, {\n    default: _withCtx(() => [_createVNode(_component_HeaderComponent, {\n      title: \"Statistik:\",\n      type: \"cardHeader\"\n    }), _createVNode(_component_TabulatorComponent, {\n      sensors: $data.potData.sensors\n    }, null, 8, [\"sensors\"])]),\n    _: 1\n  })])) : _createCommentVNode(\"\", true);\n}","map":{"version":3,"names":["$data","showSettings","_createElementBlock","_hoisted_1","_createVNode","_component_SettingsComponent","onCloseSettings","$options","toggleSettings","onUpdatePlant","updatePlant","plant","selectedPlant","potData","_hoisted_2","_component_HeaderComponent","onOpenSettings","title","profile","name","type","_component_CardComponent","_createElementVNode","_Fragment","_renderList","sensors","sensor","index","_component_SliderComponent","value","log","length","unit","boundaries","_component_TabulatorComponent"],"sources":["C:\\Users\\Dave\\prg-blumentopf\\src\\App.vue"],"sourcesContent":["<template>\n  <div v-if=\"showSettings\">\n    <SettingsComponent @closeSettings=\"toggleSettings\" @updatePlant=\"updatePlant\" :plant=\"selectedPlant\"></SettingsComponent>\n  </div>\n\n  <div v-else-if=\"potData\">\n    <HeaderComponent @openSettings=\"toggleSettings\" :title=\"profile ? profile.name : ''\" type=\"pageHeader\" />\n\n    <CardComponent>\n      <HeaderComponent title=\"Aktuelle Werte:\" type=\"cardHeader\" />\n      <ul>\n        <li v-for=\"(sensor, index) in potData.sensors\">\n          <SliderComponent :title=\"sensor.name\" :value=\"sensor.log[sensor.log.length - 1]\" :unit=\"sensor.unit\" :boundaries=\"index\"></SliderComponent>\n        </li>\n      </ul>\n    </CardComponent>\n\n    <CardComponent>\n      <HeaderComponent title=\"Statistik:\" type=\"cardHeader\" />\n      <TabulatorComponent :sensors=\"potData.sensors\"></TabulatorComponent>\n    </CardComponent>\n  </div>\n</template>\n\n<script>\n\nimport HeaderComponent from './components/HeaderComponent.vue'\nimport CardComponent from './components/CardComponent.vue'\nimport SliderComponent from './components/SliderComponent.vue'\nimport TabulatorComponent from './components/TabulatorComponent.vue'\nimport SettingsComponent from './components/SettingsComponent.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    HeaderComponent,\n    CardComponent,\n    SliderComponent,\n    TabulatorComponent,\n    SettingsComponent\n},\n  data() {\n    return {\n      showSettings: false,\n      profile: null,\n      potData: null,\n      selectedPlant: 'basil',\n      dbUrl: \"https://cloudleo.duckdns.org/Blumentopf/Database/db.json\",\n      potUrl: \"https://cloudleo.duckdns.org/Blumentopf/Database/prototyp.json\"\n    }\n  },\n  methods: {\n    toggleSettings() {\n      this.showSettings = !this.showSettings\n    },\n    updatePlant(newPlant) {\n      this.selectedPlant = newPlant\n      this.setProfile()\n    },\n    setProfile() {\n      fetch(this.dbUrl)\n        .then(res => res.json())\n        .then(data => this.profile = data[this.selectedPlant])\n        .catch(err => console.log(err.message))\n    },\n    getBoundaries(name) {\n      \n    }\n  },\n  mounted() {\n    fetch(this.potUrl)\n      .then(res => res.json())\n      .then(data => this.potData = data)\n      .catch(err => console.log(err.message))\n    this.setProfile()\n  }\n}\n</script>\n\n<style>\n#app {\n  --lightGrey: #cccccc;\n  --defaultGrey: #888888;\n  --darkGrey: #444444;\n  --black: #000000;\n  --white: #ffffff;\n  --primary: #7da0d1;\n  --secondary: #d1ae7d;\n  --statGood: #50d025;\n  --statOkay: #f0ed11;\n  --statAlert: #f57913;\n  --statWarning: #d82816;\n\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: var(--black);\n}\n\nul {\n  margin: 0;\n  padding: 0;\n}\n\nli {\n  list-style-type: none;\n}\n</style>\n"],"mappings":";;;;;;;;;;;;;SACaA,KAAA,CAAAC,YAAY,I,cAAvBC,mBAAA,CAEM,OAAAC,UAAA,GADJC,YAAA,CAAyHC,4BAAA;IAArGC,eAAa,EAAEC,QAAA,CAAAC,cAAc;IAAGC,aAAW,EAAEF,QAAA,CAAAG,WAAW;IAAGC,KAAK,EAAEX,KAAA,CAAAY;kEAGxEZ,KAAA,CAAAa,OAAO,I,cAAvBX,mBAAA,CAgBM,OAAAY,UAAA,GAfJV,YAAA,CAAyGW,0BAAA;IAAvFC,cAAY,EAAET,QAAA,CAAAC,cAAc;IAAGS,KAAK,EAAEjB,KAAA,CAAAkB,OAAO,GAAGlB,KAAA,CAAAkB,OAAO,CAACC,IAAI;IAAOC,IAAI,EAAC;4CAE1FhB,YAAA,CAOgBiB,wBAAA;sBANd,MAA6D,CAA7DjB,YAAA,CAA6DW,0BAAA;MAA5CE,KAAK,EAAC,iBAAiB;MAACG,IAAI,EAAC;QAC9CE,mBAAA,CAIK,c,kBAHHpB,mBAAA,CAEKqB,SAAA,QAAAC,WAAA,CAFyBxB,KAAA,CAAAa,OAAO,CAACY,OAAO,GAAjCC,MAAM,EAAEC,KAAK;2BAAzBzB,mBAAA,CAEK,aADHE,YAAA,CAA2IwB,0BAAA;QAAzHX,KAAK,EAAES,MAAM,CAACP,IAAI;QAAGU,KAAK,EAAEH,MAAM,CAACI,GAAG,CAACJ,MAAM,CAACI,GAAG,CAACC,MAAM;QAAQC,IAAI,EAAEN,MAAM,CAACM,IAAI;QAAGC,UAAU,EAAEN;;;;MAKxHvB,YAAA,CAGgBiB,wBAAA;sBAFd,MAAwD,CAAxDjB,YAAA,CAAwDW,0BAAA;MAAvCE,KAAK,EAAC,YAAY;MAACG,IAAI,EAAC;QACzChB,YAAA,CAAoE8B,6BAAA;MAA/CT,OAAO,EAAEzB,KAAA,CAAAa,OAAO,CAACY"},"metadata":{},"sourceType":"module","externalDependencies":[]}